@page "/req2/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="text-center">
	User/Admin Login
</div>

<div class="card">
    <div class="card-body">
	    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
		    <DataAnnotationsValidator />
		    <ValidationSummary/>

            <div class="form-group">
                <label for="username">Username</label>
                <InputText Id="username" Class="form-control" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>
            <div class="form-group">
	            <label for="password">Password</label>
	            <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />
	            <ValidationMessage For="@(() => loginModel.Password)" />
            </div>
            <div class="form-group">
	            <label for="variable">Variable</label>
	            <InputSelect Id="variable" Class="form-control" @bind-Value="loginModel.Variable">
		            @foreach (var variable in _variablesModels)
		            {
			            <option value="@variable.Id">@variable.DisplayName</option>
		            }
	            </InputSelect>
	            <ValidationMessage For="@(() => loginModel.Variable)" />
            </div>
            <div>
	            <button type="submit" class="btn btn-primary mr-3">Login</button>
                <button class="btn btn-outline-primary">SSO Login</button>
            </div>

        </EditForm>
    </div>
</div>

@code {

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";
	private readonly IList<VariableModel> _variablesModels = new List<VariableModel>()
	{
		new VariableModel() {Id = 0, DisplayName = "A"},
		new VariableModel() {Id = 1, DisplayName = "B"},
		new VariableModel() {Id = 2, DisplayName = "C"}
	};

	private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/req2");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }

}
