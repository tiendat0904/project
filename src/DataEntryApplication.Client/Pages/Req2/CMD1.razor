@page "/req2/cmd1"
@using Microsoft.AspNetCore.Authorization.Infrastructure
@inject IJSRuntime JsRuntime
@inject ICMD1Services _cmd1Services
@inject ILocalStorageService localStorage

<AuthorizeView>
	<Authorized>
		<div class="text-center">
			CMD1
		</div>
		<div class="wrapper">
			<div class="sidebar">
				<NavReq2/>
			</div>
			<div class="p-3 w-100">
				<h5>Please fill the data</h5>
				<table class="table table-bordered">
					<thead>
					<tr>
						<th rowspan="2">S.no</th>
						<th colspan="4" rowspan="1" class="text-center">Data1</th>
						<th colspan="5" rowspan="1" class="text-center">Data2</th>
					</tr>
					<tr>
						<th colspan="1" rowspan="1">C1</th>
						<th colspan="1" rowspan="1">C2</th>
						<th colspan="1" rowspan="1">C3</th>
						<th colspan="1" rowspan="1">C4</th>
						<th colspan="1" rowspan="1">L1</th>
						<th colspan="1" rowspan="1">L2</th>
						<th colspan="1" rowspan="1">L3</th>
						<th colspan="1" rowspan="1">L4</th>
						<th colspan="1" rowspan="1">L5</th>
					</tr>
					</thead>
					<tbody>
					@foreach(var value in values)
					{
						<tr>
							<td>@(values.IndexOf(value) + 1)</td>
							<td><input type="number" @bind="value.C1" readonly="@(Role==0)" class="form-control"/></td>
							<td><input type="number" @bind="value.C2" readonly="@(Role==0)" class="form-control"/></td>
							<td><input type="number" @bind="value.C3" readonly="@(Role==0)" class="form-control"/></td>
							<td><input type="number" @bind="value.C4" readonly="@(Role==0)" class="form-control"/></td>

							<td>
								<select class="form-control" readonly="@(Role==0)" @bind="value.L1">
									<option value="A">A</option>
									<option value="B">B</option>
									<option value="C">C</option>
								</select>
							</td>
							<td>
								<select class="form-control" readonly="@(Role==0)" @bind="value.L2">
									<option value="A">A</option>
									<option value="B">B</option>
									<option value="C">C</option>
								</select>
							</td>
							<td>
								<select class="form-control" readonly="@(Role==0)" @bind="value.L3">
									<option value="A">A</option>
									<option value="B">B</option>
									<option value="C">C</option>
								</select>
							</td>
							<td>
								<select class="form-control" readonly="@(Role==0)" @bind="value.L4">
									<option value="A">A</option>
									<option value="B">B</option>
									<option value="C">C</option>
								</select>
							</td>
							<td>
								<select class="form-control" readonly="@(Role==0)" @bind="value.L5">
									<option value="A">A</option>
									<option value="B">B</option>
									<option value="C">C</option>
								</select>
							</td>
						</tr>
					}
					</tbody>
				</table>
				<div class="row">
					<div class="col-6 text-center">
						<button class="btn btn-outline-success" disabled="@(Role == 0)" @onclick="SaveAsDraft">Save as Draft</button>
					</div>
					<div class="col-6 text-center">
						<button class="btn btn-outline-primary" disabled="@(Role == 0)" @onclick="Submit">Submit</button>
					</div>
				</div>
			</div>
		</div>
	</Authorized>
</AuthorizeView>

@code {
	IList<CMD1Model> values = new List<CMD1Model>();
	private int Role = 0;

	protected override async Task OnInitializedAsync()
	{
		values = await _cmd1Services.GetValuesOfCMD1();
		var role = await localStorage.GetItemAsync<int?>("role");
		Role = role ?? 0;
	}

	private async Task SaveAsDraft()
	{
		bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Saves the data in the database and can be edited?");
		if (confirmed)
		{
			var result = await _cmd1Services.Save(values, 0);
		}
	}
	private async Task Submit()
	{
		bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Do you want to Submit?");
		if (confirmed)
		{
			var result = await _cmd1Services.Save(values, 1);
		}
	}
}
